[
["index.html", "R Code for Mastering ’Metrics Welcome Install License Colonophon", " R Code for Mastering ’Metrics Jeffrey B. Arnold Welcome This work contains R code to reproduce many of the analyses in Mastering ’Metrics by Joshua D. Angrist and Jörn-Steffen Pischke (Angrist and Pischke 2014). This work provides R translations of the replication code available at masteringmetrics.com. Install To install all packages used in the examples in this work and the datasets from Mastering ’Metrics run devtools::install_github(&quot;jrnold/masteringmetrics&quot;, subdir = &quot;masteringmetrics&quot;) License The text of this work is licensed under the Creative Commons Attribution 4.0 International License. The R Code in this work is licensed under the MIT License. Colonophon The book is powered by https://bookdown.org which makes it easy to turn R markdown files into HTML, PDF, and EPUB. This book was built with: devtools::session_info(c(&quot;tidyverse&quot;)) #&gt; Session info ------------------------------------------------------------- #&gt; setting value #&gt; version R version 3.4.4 (2018-03-15) #&gt; system x86_64, darwin15.6.0 #&gt; ui X11 #&gt; language (EN) #&gt; collate en_US.UTF-8 #&gt; tz America/Los_Angeles #&gt; date 2018-03-31 #&gt; Packages ----------------------------------------------------------------- #&gt; package * version date source #&gt; assertthat 0.2.0 2017-04-11 CRAN (R 3.4.0) #&gt; backports 1.1.2 2017-12-13 CRAN (R 3.4.3) #&gt; base64enc 0.1-3 2015-07-28 CRAN (R 3.4.0) #&gt; BH 1.66.0-1 2018-02-13 CRAN (R 3.4.3) #&gt; bindr 0.1.1 2018-03-13 CRAN (R 3.4.4) #&gt; bindrcpp 0.2 2017-06-17 CRAN (R 3.4.0) #&gt; broom 0.4.4 2018-03-29 cran (@0.4.4) #&gt; callr 2.0.2 2018-02-11 CRAN (R 3.4.3) #&gt; cellranger 1.1.0 2016-07-27 CRAN (R 3.4.0) #&gt; cli 1.0.0 2017-11-05 cran (@1.0.0) #&gt; colorspace 1.3-2 2016-12-14 CRAN (R 3.4.0) #&gt; compiler 3.4.4 2018-03-15 local #&gt; crayon 1.3.4 2017-09-16 CRAN (R 3.4.1) #&gt; curl 3.1 2017-12-12 CRAN (R 3.4.3) #&gt; DBI 0.8 2018-03-02 CRAN (R 3.4.3) #&gt; dbplyr 1.2.1 2018-02-19 CRAN (R 3.4.3) #&gt; debugme 1.1.0 2017-10-22 CRAN (R 3.4.2) #&gt; dichromat 2.0-0 2013-01-24 CRAN (R 3.4.0) #&gt; digest 0.6.15 2018-01-28 CRAN (R 3.4.3) #&gt; dplyr 0.7.4 2017-09-28 CRAN (R 3.4.2) #&gt; evaluate 0.10.1 2017-06-24 CRAN (R 3.4.1) #&gt; forcats 0.3.0 2018-02-19 CRAN (R 3.4.3) #&gt; foreign 0.8-69 2017-06-22 CRAN (R 3.4.4) #&gt; ggplot2 2.2.1 2016-12-30 CRAN (R 3.4.0) #&gt; glue 1.2.0 2017-10-29 CRAN (R 3.4.2) #&gt; graphics * 3.4.4 2018-03-15 local #&gt; grDevices * 3.4.4 2018-03-15 local #&gt; grid 3.4.4 2018-03-15 local #&gt; gtable 0.2.0 2016-02-26 CRAN (R 3.4.0) #&gt; haven 1.1.1.9000 2018-03-31 Github (tidyverse/haven@746eb3e) #&gt; highr 0.6 2016-05-09 CRAN (R 3.4.0) #&gt; hms 0.4.2 2018-03-10 CRAN (R 3.4.4) #&gt; htmltools 0.3.6 2017-04-28 CRAN (R 3.4.0) #&gt; httr 1.3.1 2017-08-20 CRAN (R 3.4.1) #&gt; jsonlite 1.5 2017-06-01 CRAN (R 3.4.0) #&gt; knitr 1.20 2018-02-20 CRAN (R 3.4.3) #&gt; labeling 0.3 2014-08-23 CRAN (R 3.4.0) #&gt; lattice 0.20-35 2017-03-25 CRAN (R 3.4.4) #&gt; lazyeval 0.2.1 2017-10-29 CRAN (R 3.4.2) #&gt; lubridate 1.7.3 2018-02-27 CRAN (R 3.4.3) #&gt; magrittr 1.5 2014-11-22 CRAN (R 3.4.0) #&gt; markdown 0.8 2017-04-20 CRAN (R 3.4.0) #&gt; MASS 7.3-49 2018-02-23 CRAN (R 3.4.3) #&gt; methods 3.4.4 2018-03-15 local #&gt; mime 0.5 2016-07-07 CRAN (R 3.4.0) #&gt; mnormt 1.5-5 2016-10-15 CRAN (R 3.4.0) #&gt; modelr 0.1.1 2017-07-24 CRAN (R 3.4.1) #&gt; munsell 0.4.3 2016-02-13 CRAN (R 3.4.0) #&gt; nlme 3.1-131.1 2018-02-16 CRAN (R 3.4.4) #&gt; openssl 1.0.1 2018-03-03 CRAN (R 3.4.3) #&gt; parallel 3.4.4 2018-03-15 local #&gt; pillar 1.2.1 2018-02-27 CRAN (R 3.4.3) #&gt; pkgconfig 2.0.1 2017-03-21 CRAN (R 3.4.0) #&gt; plogr 0.2.0 2018-03-25 CRAN (R 3.4.4) #&gt; plyr 1.8.4 2016-06-08 CRAN (R 3.4.0) #&gt; praise 1.0.0 2015-08-11 CRAN (R 3.4.0) #&gt; psych 1.7.8 2017-09-09 CRAN (R 3.4.1) #&gt; purrr 0.2.4 2017-10-18 cran (@0.2.4) #&gt; R6 2.2.2 2017-06-17 CRAN (R 3.4.0) #&gt; RColorBrewer 1.1-2 2014-12-07 CRAN (R 3.4.0) #&gt; Rcpp 0.12.16 2018-03-13 cran (@0.12.16) #&gt; readr 1.1.1 2017-05-16 CRAN (R 3.4.0) #&gt; readxl 1.0.0 2017-04-18 CRAN (R 3.4.0) #&gt; rematch 1.0.1 2016-04-21 CRAN (R 3.4.0) #&gt; reprex 0.1.2 2018-01-26 CRAN (R 3.4.3) #&gt; reshape2 1.4.3 2017-12-11 CRAN (R 3.4.3) #&gt; rlang 0.2.0 2018-02-20 CRAN (R 3.4.3) #&gt; rmarkdown 1.9 2018-03-01 CRAN (R 3.4.3) #&gt; rprojroot 1.3-2 2018-01-03 CRAN (R 3.4.3) #&gt; rstudioapi 0.7 2017-09-07 CRAN (R 3.4.1) #&gt; rvest 0.3.2 2016-06-17 CRAN (R 3.4.0) #&gt; scales 0.5.0 2017-08-24 CRAN (R 3.4.1) #&gt; selectr 0.3-2 2018-03-05 CRAN (R 3.4.4) #&gt; stats * 3.4.4 2018-03-15 local #&gt; stringi 1.1.7 2018-03-12 CRAN (R 3.4.4) #&gt; stringr 1.3.0 2018-02-19 CRAN (R 3.4.3) #&gt; testthat 2.0.0 2017-12-13 CRAN (R 3.4.3) #&gt; tibble 1.4.2 2018-01-22 CRAN (R 3.4.3) #&gt; tidyr 0.8.0 2018-01-29 CRAN (R 3.4.3) #&gt; tidyselect 0.2.4 2018-02-26 CRAN (R 3.4.3) #&gt; tidyverse 1.2.1 2017-11-14 CRAN (R 3.4.2) #&gt; tools 3.4.4 2018-03-15 local #&gt; utf8 1.1.3 2018-01-03 CRAN (R 3.4.3) #&gt; utils * 3.4.4 2018-03-15 local #&gt; viridisLite 0.3.0 2018-02-01 CRAN (R 3.4.3) #&gt; whisker 0.3-2 2013-04-28 CRAN (R 3.4.0) #&gt; withr 2.1.2 2018-03-15 CRAN (R 3.4.4) #&gt; xml2 1.2.0 2018-01-24 CRAN (R 3.4.3) #&gt; yaml 2.1.18 2018-03-08 cran (@2.1.18) "],
["national-health-interview-survey.html", "1 National Health Interview Survey 1.1 References", " 1 National Health Interview Survey This reproduces the analyses in Table 1.1 of Angrist and Pischke (2014). which compares people with and without health insurance in the 2009 National Health Interview Survey (NHIS). The code is derived from NHIS2009_hicompare.do. Load the prerequisite packages. library(&quot;tidyverse&quot;) library(&quot;magrittr&quot;) library(&quot;haven&quot;) Load the data (originally from http://masteringmetrics.com/wp-content/uploads/2015/01/Data.zip), and adjust a few of the columns to account for differences in how Stata and R store data. data(&quot;NHIS2009&quot;, package = &quot;masteringmetrics&quot;) Remove missing values. NHIS2009 &lt;- NHIS2009 %&gt;% filter(marradult, perweight != 0) %&gt;% group_by(serial) %&gt;% mutate(hi_hsb = mean(hi_hsb1, na.rm = TRUE)) %&gt;% filter(!is.na(hi_hsb), !is.na(hi)) %&gt;% mutate(female = sum(fml)) %&gt;% filter(female == 1) %&gt;% select(-female) For the sample only include married adults between 26 and 59 in age, and remove single person households. NHIS2009 &lt;- NHIS2009 %&gt;% filter(between(age, 26, 59), marradult, adltempl &gt;= 1) Keep only single family households. NHIS2009 &lt;- NHIS2009 %&gt;% group_by(serial) %&gt;% filter(length(serial) &gt; 1L) %&gt;% ungroup() Tables of wives and husbands by health insurance. status. The weighting following the “analytic” weights in the original .do file which weights observations by perweight and normalizes the weights so that the sub-samples of males and females have the same number as the original sample. NHIS2009 %&gt;% group_by(fml) %&gt;% # normalize person weights to match number of observations in each # group mutate(perweight = perweight / sum(perweight) * n()) %&gt;% group_by(fml, hi) %&gt;% summarise(n_wt = sum(perweight)) %&gt;% group_by(fml) %&gt;% mutate(prop = n_wt / sum(n_wt)) #&gt; # A tibble: 4 x 4 #&gt; # Groups: fml [2] #&gt; fml hi n_wt prop #&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 FALSE 0. 1281. 0.136 #&gt; 2 FALSE 1. 8114. 0.864 #&gt; 3 TRUE 0. 1131. 0.120 #&gt; 4 TRUE 1. 8264. 0.880 Compare sample statistics of mean and women, with and without health insurance. varlist &lt;- c(&quot;hlth&quot;, &quot;nwhite&quot;, &quot;age&quot;, &quot;yedu&quot;, &quot;famsize&quot;, &quot;empl&quot;, &quot;inc&quot;) NHIS2009_diff &lt;- NHIS2009 %&gt;% # rlang::set_attrs with NULL removes attributes from columns. # this avoids a warning from gather about differing attributes map_dfc(~ rlang::set_attrs(.x, NULL)) %&gt;% select(fml, hi, one_of(varlist)) %&gt;% gather(variable, value, -fml, -hi) %&gt;% group_by(fml, hi, variable) %&gt;% summarise(mean = mean(value, na.rm = TRUE), sd = sd(value, na.rm = TRUE)) %&gt;% gather(stat, value, -fml, -hi, -variable) %&gt;% unite(stat_hi, stat, hi) %&gt;% spread(stat_hi, value) %&gt;% mutate(diff = mean_1 - mean_0) knitr::kable(NHIS2009_diff, digits = 3) fml variable mean_0 mean_1 sd_0 sd_1 diff FALSE age 4.13e+01 4.42e+01 8.40e+00 8.61e+00 2.893 FALSE empl 8.52e-01 9.22e-01 3.55e-01 2.68e-01 0.070 FALSE famsize 4.06e+00 3.55e+00 1.54e+00 1.32e+00 -0.506 FALSE hlth 3.70e+00 3.98e+00 1.01e+00 9.34e-01 0.278 FALSE inc 4.36e+04 1.04e+05 3.57e+04 5.48e+04 60366.415 FALSE nwhite 1.88e-01 2.00e-01 3.91e-01 4.00e-01 0.011 FALSE yedu 1.12e+01 1.41e+01 3.47e+00 2.68e+00 2.919 TRUE age 3.95e+01 4.22e+01 8.26e+00 8.65e+00 2.631 TRUE empl 5.41e-01 7.58e-01 4.98e-01 4.29e-01 0.216 TRUE famsize 4.07e+00 3.55e+00 1.54e+00 1.32e+00 -0.520 TRUE hlth 3.61e+00 3.99e+00 1.02e+00 9.28e-01 0.382 TRUE inc 4.36e+04 1.03e+05 3.52e+04 5.51e+04 59722.242 TRUE nwhite 1.83e-01 2.02e-01 3.87e-01 4.01e-01 0.018 TRUE yedu 1.14e+01 1.43e+01 3.50e+00 2.60e+00 2.913 1.1 References http://masteringmetrics.com/wp-content/uploads/2014/12/ReadMe_NHIS.txt http://masteringmetrics.com/wp-content/uploads/2015/01/NHIS2009_hicompare.do "],
["rand-health-insurance-experiment-hie.html", "2 RAND Health Insurance Experiment (HIE) 2.1 Table 1.3 2.2 Table 1.4 References", " 2 RAND Health Insurance Experiment (HIE) This provides code replicates the Tables 1.3 and 1.4 of Angrist and Pischke (2014) which replicate the analyses from the RAND Health Insurance Experiment (Brook et al. 1983,@Aron-DineEinavEtAl2013). Load necessary libraries. library(&quot;tidyverse&quot;) library(&quot;broom&quot;) library(&quot;haven&quot;) library(&quot;rlang&quot;) library(&quot;clubSandwich&quot;) Function to calculate sclustered standard errors and return a tidy data frame of the coefficients and standard errors. cluster_se &lt;- function(mod, cluster, type = &quot;CR2&quot;) { vcov &lt;- vcovCR(mod, cluster = cluster, type = &quot;CR2&quot;) coef_test(mod, vcov = vcov) %&gt;% rownames_to_column(var = &quot;term&quot;) %&gt;% as_tibble() %&gt;% select(term, estimate = beta, std.error = SE) } 2.1 Table 1.3 Angrist and Pischke (2014) Table 1.3 presents demographic and baseline health characteristics for subjects of the RAND Health Insurance Experiment (HIE). Load the rand data. data(&quot;rand_sample&quot;, package = &quot;masteringmetrics&quot;) Calculate the number in each plan: plantypes &lt;- count(rand_sample, plantype) knitr::kable(plantypes) plantype n Catastrophic 759 Deductible 881 Coinsurance 1022 Free 1295 For each variable variables, estimate the the difference in means between heath insurance plan types. varlist &lt;- c(&quot;female&quot;, &quot;blackhisp&quot;, &quot;age&quot;, &quot;educper&quot;, &quot;income1cpi&quot;, &quot;hosp&quot;, &quot;ghindx&quot;, &quot;cholest&quot;, &quot;diastol&quot;, &quot;systol&quot;, &quot;mhi&quot;, &quot;ghindxx&quot;, &quot;cholestx&quot;, &quot;diastolx&quot;, &quot;systolx&quot;, &quot;mhix&quot;) Create column (1) with the mean and standard deviation of the “Catastrophic” plan, catastrophic_stats &lt;- rand_sample %&gt;% filter(plantype == &quot;Catastrophic&quot;) %&gt;% select(one_of(varlist)) %&gt;% gather(variable, value) %&gt;% group_by(variable) %&gt;% summarise(Mean = mean(value, na.rm = TRUE), `Std. Dev.` = sd(value, na.rm = TRUE)) knitr::kable(catastrophic_stats, digits = 3) variable Mean Std. Dev. age 3.24e+01 1.29e+01 blackhisp 1.72e-01 3.77e-01 cholest 2.07e+02 3.99e+01 cholestx 2.03e+02 4.21e+01 diastol 7.48e+01 1.10e+01 diastolx 7.88e+01 1.20e+01 educper 1.21e+01 2.88e+00 female 5.60e-01 4.97e-01 ghindx 7.09e+01 1.49e+01 ghindxx 6.85e+01 1.59e+01 hosp 1.15e-01 3.20e-01 income1cpi 3.16e+04 1.81e+04 mhi 7.38e+01 1.43e+01 mhix 7.55e+01 1.48e+01 systol 1.22e+02 1.65e+01 systolx 1.22e+02 1.87e+01 The difference in means between plans and the catastophic plan. calc_diffs &lt;- function(x) { # programmatically create the formula for lm f &lt;- quo(!!sym(x) ~ plantype) mod &lt;- lm(f, data = rand_sample) # nolint out &lt;- cluster_se(mod, cluster = rand_sample[[&quot;fam_identifier&quot;]]) out[[&quot;response&quot;]] &lt;- x out } plantype_diffs &lt;- map_dfr(varlist, calc_diffs) %&gt;% select(response, term, estimate, std.error) %&gt;% mutate(term = str_replace(term, &quot;^plantype&quot;, &quot;&quot;)) Create a table similar to Angrist and Pischke (2014) Table 1.3. fmt_num &lt;- function(x) { prettyNum(x, digits = 3, format = &quot;f&quot;, big.mark = &quot;,&quot;, drop0trailing = FALSE) } plantype_diffs %&gt;% mutate(estimate = str_c(fmt_num(estimate), &quot; (&quot;, fmt_num(std.error), &quot;)&quot;)) %&gt;% select(-std.error) %&gt;% spread(term, estimate) %&gt;% knitr::kable(digits = 3) response (Intercept) Coinsurance Deductible Free age 32.4 (0.485) 0.966 (0.655) 0.561 (0.676) 0.435 (0.614) blackhisp 0.172 (0.0199) -0.0269 (0.025) -0.0188 (0.0266) -0.0281 (0.0245) cholest 207 (1.99) -1.93 (2.76) -1.42 (2.99) -5.25 (2.7) cholestx 203 (1.87) -2.31 (2.47) 0.691 (2.58) -1.83 (2.39) diastol 74.8 (0.569) -0.514 (0.786) 1.22 (0.831) -0.143 (0.721) diastolx 78.8 (0.466) -0.335 (0.617) 0.219 (0.648) -1.03 (0.588) educper 12.1 (0.14) -0.0613 (0.186) -0.157 (0.191) -0.263 (0.183) female 0.56 (0.0118) -0.0247 (0.0153) -0.0231 (0.016) -0.0379 (0.015) ghindx 70.9 (0.694) 0.211 (0.922) -1.44 (0.952) -1.31 (0.872) ghindxx 68.5 (0.702) 0.612 (0.903) -0.869 (0.964) -0.776 (0.867) hosp 0.115 (0.0117) -0.00249 (0.0152) 0.00449 (0.016) 0.00117 (0.0146) income1cpi 31,603 (1,073) 970 (1,391) -2,104 (1,386) -976 (1,346) mhi 73.8 (0.619) 1.19 (0.81) -0.12 (0.822) 0.89 (0.766) mhix 75.5 (0.696) 1.07 (0.872) 0.454 (0.911) 0.433 (0.826) systol 122 (0.805) 0.907 (1.08) 2.32 (1.16) 1.12 (1.01) systolx 122 (0.782) -1.39 (0.986) 1.17 (1.06) -0.522 (0.934) Plot the difference-in-means of each plantype vs. catastrophic insurance. ggplot(filter(plantype_diffs, term != &quot;(Intercept)&quot;), aes(x = term, y = estimate, ymin = estimate - 2 * std.error, ymax = estimate + 2 * std.error)) + geom_hline(yintercept = 0, colour = &quot;white&quot;, size = 1) + geom_pointrange() + facet_grid(response ~ ., scales = &quot;free_y&quot;) 2.2 Table 1.4 Replicate Angrist and Pischke (2014) Table 1.4 which presents health outcome and health expenditure results from the RAND HIE. data(&quot;rand_person_spend&quot;, package = &quot;masteringmetrics&quot;) Correlate year variable from annual expenditures data to correct calendar year in order to adjust for inflation. rand_person_spend &lt;- mutate(rand_person_spend, expyear = indv_start_year + year - 1) Adjust spending for inflation. The CPI adjustment values below are based on the June CPI from 1991 (see table found at http://www.seattle.gov/financedepartment/cpi/historical.htm ). cpi &lt;- tribble( ~ year, ~ cpi, 1973, 3.07, 1974, 2.76, 1975, 2.53, 1976, 2.39, 1977, 2.24, 1978, 2.09, 1979, 1.88, 1980, 1.65, 1981, 1.5, 1982, 1.41, 1983, 1.37, 1984, 1.31, 1985, 1.27 ) rand_person_spend &lt;- left_join(rand_person_spend, cpi, by = c(&quot;expyear&quot; = &quot;year&quot;)) %&gt;% mutate(out_inf = outsum * cpi, inpdol_inf = inpdol * cpi) Add a total spending variable. rand_person_spend &lt;- mutate(rand_person_spend, tot_inf = inpdol_inf + out_inf) Add a variable for any health insurance (free, Individual deductible, or cost-sharing): rand_person_spend &lt;- mutate(rand_person_spend, any_ins = plantype != &quot;Catastrophic&quot;) Count the number of observations in each plan-type, count(rand_person_spend, plantype) #&gt; # A tibble: 4 x 2 #&gt; plantype n #&gt; &lt;fct&gt; &lt;int&gt; #&gt; 1 Catastrophic 3724 #&gt; 2 Deductible 4175 #&gt; 3 Cost Sharing 5464 #&gt; 4 Free 6840 and any-insurance, count(rand_person_spend, any_ins) #&gt; # A tibble: 2 x 2 #&gt; any_ins n #&gt; &lt;lgl&gt; &lt;int&gt; #&gt; 1 FALSE 3724 #&gt; 2 TRUE 16479 Create a list of response variables. varlist &lt;- c(&quot;ftf&quot;, &quot;out_inf&quot;, &quot;totadm&quot;, &quot;inpdol_inf&quot;, &quot;tot_inf&quot;) Calculate the mean and standard deviation for those receiving catastrophic insurance. rand_person_spend %&gt;% filter(plantype == &quot;Catastrophic&quot;) %&gt;% select(one_of(varlist)) %&gt;% gather(response, value) %&gt;% group_by(response) %&gt;% summarise(Mean = mean(value, na.rm = TRUE), `Std. Dev.` = sd(value, na.rm = TRUE)) #&gt; # A tibble: 5 x 3 #&gt; response Mean `Std. Dev.` #&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; #&gt; 1 ftf 2.78 5.50 #&gt; 2 inpdol_inf 388. 2308. #&gt; 3 out_inf 248. 488. #&gt; 4 tot_inf 636. 2535. #&gt; 5 totadm 0.0991 0.379 Calculate the difference in means between plans and the catastophic plan. calc_diffs &lt;- function(x) { # programmatically create the formula f &lt;- quo(!!sym(x) ~ plantype) mod &lt;- lm(f, data = rand_person_spend) # nolint out &lt;- cluster_se(mod, cluster = rand_person_spend[[&quot;fam_identifier&quot;]]) out[[&quot;response&quot;]] &lt;- x out } person_diffs &lt;- map_dfr(varlist, calc_diffs) %&gt;% select(response, term, estimate, std.error) %&gt;% mutate(term = str_replace(term, &quot;^plantype&quot;, &quot;&quot;)) Standard errors are clustered by family identifier using the clubSandwich package. Print the table. If this were an actual publication, I’d make it nicer. fmt_num &lt;- function(x) { prettyNum(x, digits = 3, format = &quot;f&quot;, big.mark = &quot;,&quot;, drop0trailing = FALSE) } person_diffs %&gt;% mutate(estimate = str_c(fmt_num(estimate), &quot; (&quot;, fmt_num(std.error), &quot;)&quot;)) %&gt;% select(-std.error) %&gt;% spread(term, estimate) %&gt;% knitr::kable(digits = 3) response (Intercept) Cost Sharing Deductible Free ftf 2.78 (0.178) 0.481 (0.24) 0.193 (0.247) 1.66 (0.248) inpdol_inf 388 (44.9) 92.5 (72.8) 72.2 (68.6) 116 (59.8) out_inf 248 (14.8) 59.8 (20.7) 41.8 (20.8) 169 (19.9) tot_inf 636 (54.5) 152 (84.6) 114 (79.1) 285 (72.4) totadm 0.0991 (0.00785) 0.0023 (0.0108) 0.0159 (0.0109) 0.0288 (0.0105) Additionally we could plot the difference-in-means of each plan type vs. catastrophic insurance. ggplot(filter(person_diffs, term != &quot;(Intercept)&quot;), aes(x = term, y = estimate, ymin = estimate - 2 * std.error, ymax = estimate + 2 * std.error)) + geom_hline(yintercept = 0, colour = &quot;white&quot;, size = 1) + geom_pointrange() + facet_grid(response ~ ., scales = &quot;free_y&quot;) References https://www.icpsr.umich.edu/icpsrweb/NACDA/studies/6439/version/1 http://masteringmetrics.com/wp-content/uploads/2015/01/ReadMe_RAND.txt http://masteringmetrics.com/wp-content/uploads/2015/01/Code.zip "],
["minneapolis-domestic-violence-experiment.html", "3 Minneapolis Domestic Violence Experiment 3.1 References", " 3 Minneapolis Domestic Violence Experiment This replicates Table 3.3 of Mastering ’Metrics, which replicates the Minneapolis Domestic Violence Experiment (Sherman and Berk 1984,@Angrist2006). Load necessary packages. library(&quot;tidyverse&quot;) Load the MDVE data. data(&quot;mdve&quot;, package = &quot;masteringmetrics&quot;) Randomized assignments (i.e. what are police assigned to do) are in the assigned column. Actual outcomes (i.e. what action do the police actually take) is in the outcome column. gen outcome = “Arrest” if T_FINAL == 1 replace outcome = “Advise” if T_FINAL == 2 replace outcome = “Separate” if T_FINAL == 3 replace outcome = “Other” if T_FINAL == 4 gen total = 1 mdve &lt;- mutate(mdve, assigned = case_when( T_RANDOM == 1 ~ &quot;Arrest&quot;, T_RANDOM == 2 ~ &quot;Advise&quot;, T_RANDOM == 3 ~ &quot;Separate&quot; ), outcome = case_when( T_FINAL == 1 ~ &quot;Arrest&quot;, T_FINAL == 2 ~ &quot;Advise&quot;, T_FINAL == 3 ~ &quot;Separate&quot;, T_FINAL == 4 ~ &quot;Other&quot; ), coddled_a = assigned != &quot;Arrest&quot;, coddled_o = outcome != &quot;Arrest&quot; ) %&gt;% filter(outcome != &quot;Other&quot;) Assigned and delivered treatments in the MDVE: mdve_summary &lt;- mdve %&gt;% count(assigned, outcome) %&gt;% group_by(assigned) %&gt;% mutate(p = n / sum(n)) print(mdve_summary, n = nrow(mdve_summary)) #&gt; # A tibble: 8 x 4 #&gt; # Groups: assigned [3] #&gt; assigned outcome n p #&gt; &lt;chr&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 Advise Advise 84 0.778 #&gt; 2 Advise Arrest 19 0.176 #&gt; 3 Advise Separate 5 0.0463 #&gt; 4 Arrest Arrest 91 0.989 #&gt; 5 Arrest Separate 1 0.0109 #&gt; 6 Separate Advise 5 0.0439 #&gt; 7 Separate Arrest 26 0.228 #&gt; 8 Separate Separate 83 0.728 Assigned proportions in the MDVE: mdve_assigned &lt;- mdve %&gt;% count(assigned) %&gt;% mutate(p = n / sum(n)) mdve_assigned #&gt; # A tibble: 3 x 3 #&gt; assigned n p #&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 Advise 108 0.344 #&gt; 2 Arrest 92 0.293 #&gt; 3 Separate 114 0.363 Delivered treatments in the MDVE: mdve_outcome &lt;- mdve %&gt;% count(outcome) %&gt;% mutate(p = n / sum(n)) mdve_outcome #&gt; # A tibble: 3 x 3 #&gt; outcome n p #&gt; &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 Advise 89 0.283 #&gt; 2 Arrest 136 0.433 #&gt; 3 Separate 89 0.283 Probability of being coddled, given being assigned the coddled treatment: mdve_coddled &lt;- mdve %&gt;% count(coddled_a, coddled_o) %&gt;% group_by(coddled_a) %&gt;% mutate(p = n / sum(n)) mdve_coddled #&gt; # A tibble: 4 x 4 #&gt; # Groups: coddled_a [2] #&gt; coddled_a coddled_o n p #&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;int&gt; &lt;dbl&gt; #&gt; 1 FALSE FALSE 91 0.989 #&gt; 2 FALSE TRUE 1 0.0109 #&gt; 3 TRUE FALSE 45 0.203 #&gt; 4 TRUE TRUE 177 0.797 IV first stage, \\[ E[D_i | Z_i = 1] - E[D_i | Z_i = 0] . \\] filter(mdve_coddled, coddled_o, coddled_a)$p - filter(mdve_coddled, coddled_o, !coddled_a)$p #&gt; [1] 0.786 The response variable is not provided, so the full 2SLS is not estimated here. 3.1 References http://masteringmetrics.com/wp-content/uploads/2015/02/MDVE_Table33.do http://masteringmetrics.com/wp-content/uploads/2015/02/ReadMe_MDVE.txt "],
["mlda-regression-discontinuity.html", "4 MLDA Regression Discontinuity 4.1 References", " 4 MLDA Regression Discontinuity MLDA Regression Discontinuity (based on data from Carpenter and Dobkin (2011)) from Chapter 4 of Mastering ’Metrics, Table 4.1 and Figures 4.2, 4.4, and 4.5 in Mastering Metrics. These present sharp RD estimates of the effect of the minimum legal drinking age (MLDA) on mortality. Load libraries. library(&quot;tidyverse&quot;) library(&quot;haven&quot;) library(&quot;rlang&quot;) library(&quot;broom&quot;) library(&quot;lmtest&quot;) library(&quot;sandwich&quot;) Load MLDA data data(&quot;mlda&quot;, package = &quot;masteringmetrics&quot;) Add an indicator variable for individuals over 21 years of age. mlda &lt;- mutate(mlda, age = agecell - 21, over21 = as.integer(agecell &gt;= 21)) Add a variable for other causes of death. mlda &lt;- mutate(mlda, ext_oth = external - homicide - suicide - mva) For “all causes”, “motor vehicle accidents”, and “internal causes” deaths plot the linear and quadratic trends on each side of age 21. varlist &lt;- c(&quot;all&quot; = &quot;All Causes&quot;, &quot;mva&quot; = &quot;Motor Vehicle Accidents&quot;, &quot;internal&quot; = &quot;Internal Causes&quot;) mlda %&gt;% select(agecell, over21, one_of(names(varlist))) %&gt;% gather(response, value, -agecell, -over21, na.rm = TRUE) %&gt;% mutate(response = recode(response, !!!as.list(varlist))) %&gt;% ggplot(aes(x = agecell, y = value)) + geom_point() + geom_smooth(mapping = aes(group = over21), se = FALSE, method = &quot;lm&quot;, formula = y ~ poly(x, 2)) + geom_smooth(mapping = aes(group = over21), se = FALSE, method = &quot;lm&quot;, formula = y ~ x, color = &quot;black&quot;) + facet_grid(response ~ ., scales = &quot;free_y&quot;) + labs(y = &quot;Mortality rate (per 100,000)&quot;, x = &quot;Age&quot;) responses &lt;- c(&quot;all&quot; = &quot;All deaths&quot;, &quot;mva&quot; = &quot;Motor vehicle accidents&quot;, &quot;suicide&quot; = &quot;Suicide&quot;, &quot;homicide&quot; = &quot;Homocide&quot;, &quot;ext_oth&quot; = &quot;Other external causes&quot;, &quot;internal&quot; = &quot;All internal causes&quot;, &quot;alcohol&quot; = &quot;Alcohol&quot;) Define a function to run four regressions for a given response variable, y. run_reg &lt;- function(y) { mods &lt;- list( &quot;Ages 19-22, Linear&quot; = lm(quo(!!sym(y) ~ age * over21), data = mlda), &quot;Ages 19-22, Quadratic&quot; = lm(quo(!!sym(y) ~ poly(age, 2, raw = TRUE) * over21), data = mlda), &quot;Ages 20-21, Linear&quot; = lm(quo(!!sym(y) ~ age * over21), data = filter(mlda, agecell &gt;= 20, agecell &lt;= 22)), &quot;Ages 20-21, Quadratic&quot; = lm(quo(!!sym(y) ~ poly(age, 2, raw = TRUE) * over21), data = filter(mlda, agecell &gt;= 20, agecell &lt;= 22)) ) out &lt;- tibble( model_name = names(mods), model = mods, ages = rep(c(&quot;19-22&quot;, &quot;20-21&quot;), each = 2), trend = rep(c(&quot;Linear&quot;, &quot;Quadratic&quot;), 2), model_num = seq_along(mods) ) %&gt;% mutate(coefs = map(model, ~ tidy(coeftest(.x, vcovHC(.x))))) %&gt;% # nolint unnest(coefs, .drop = FALSE) %&gt;% filter(term == &quot;over21&quot;) %&gt;% select(model_name, model, term, estimate, std.error) %&gt;% mutate(response = y) # sample size = df.residuals + residuals out[[&quot;obs&quot;]] &lt;- map_dfr(mods, glance) %&gt;% mutate(obs = df.residual + df) %&gt;% pluck(&quot;obs&quot;) out } mlda_regs &lt;- map_dfr(names(responses), run_reg) %&gt;% mutate(response = recode(response, !!!as.list(responses))) mlda_regs %&gt;% select(model_name, response, estimate, std.error) %&gt;% gather(stat, value, estimate, std.error) %&gt;% spread(model_name, value) %&gt;% knitr::kable() response stat Ages 19-22, Linear Ages 19-22, Quadratic Ages 20-21, Linear Ages 20-21, Quadratic Alcohol estimate 0.442 0.799 0.740 1.028 Alcohol std.error 0.213 0.431 0.360 0.725 All deaths estimate 7.663 9.548 9.753 9.611 All deaths std.error 1.374 2.231 2.279 3.565 All internal causes estimate 0.392 1.073 1.692 1.249 All internal causes std.error 0.592 0.931 0.877 1.465 Homocide estimate 0.104 0.200 0.164 -0.453 Homocide std.error 0.394 0.604 0.590 1.594 Motor vehicle accidents estimate 4.534 4.663 4.759 5.892 Motor vehicle accidents std.error 0.731 1.366 1.385 1.937 Other external causes estimate 0.838 1.797 1.414 1.625 Other external causes std.error 0.413 0.673 0.606 1.245 Suicide estimate 1.794 1.814 1.724 1.297 Suicide std.error 0.530 0.950 0.881 1.661 The robust standard errors using the H C3 standard errors fr om sandwich::vcovHC and dif fer from tho se reported in *Maste ring ’Metrics*. 4.1 References http://masteringmetrics.com/wp-content/uploads/2015/01/master_cd_rd.do http://masteringmetrics.com/wp-content/uploads/2015/01/ReadMe_MLDA.txt "],
["mississippi-bank-failures-in-the-great-depression.html", "5 Mississippi Bank Failures in the Great Depression 5.1 References", " 5 Mississippi Bank Failures in the Great Depression A difference-in-difference analysis of Mississippi bank failures during the Great Depression (Richardson and Troost 2009). This replicates Figures 5.1–5.3 in Mastering ’Metrics. library(&quot;tidyverse&quot;) library(&quot;lubridate&quot;) Load the banks data. data(&quot;banks&quot;, package = &quot;masteringmetrics&quot;) Only use yearly data in the difference-in-difference estimates. Use the number of banks on July 1st of each year. banks &lt;- banks %&gt;% filter(month(date) == 7L, mday(date) == 1L) %&gt;% mutate(year = year(date)) %&gt;% select(year, matches(&quot;bi[ob][68]&quot;)) Generate the counterfactual using the difference between the number of banks in district 8 and district 6. banks &lt;- banks %&gt;% arrange(year) %&gt;% mutate(diff86 = bib8[year == 1930] - bib6[year == 1930], counterfactual = if_else(year &gt;= 1930, bib8 - diff86, NA_integer_)) %&gt;% select(-diff86) Plot the lines of the Distinct 8 banks in business, District 6 banks in business, and the District 6 counterfactual. This is equivalent to Figure 5.3 of Angrist and Pischke (2014). select(banks, year, bib8, bib6, counterfactual) %&gt;% gather(variable, value, -year, na.rm = TRUE) %&gt;% mutate(variable = recode(variable, bib8 = &quot;8th district&quot;, bib6 = &quot;6th district&quot;, counterfactual = &quot;Counterfactual&quot;)) %&gt;% ggplot(aes(x = year, y = value, colour = variable)) + geom_point() + geom_line() + ylab(&quot;Number of Banks in Business&quot;) + xlab(&quot;&quot;) Plot the difference-in-difference estimate for all years after 1930. ggplot(filter(banks, year &gt; 1930), aes(x = year, y = bib6 - counterfactual)) + geom_point() + geom_line() + ylab(&quot;DID (Number of Banks)&quot;) + xlab(&quot;&quot;) (#fig:plot_bank_year_diff)Difference between Eighth District and Sixth District Counterfactual 5.1 References http://masteringmetrics.com/wp-content/uploads/2015/02/master_banks.do http://masteringmetrics.com/wp-content/uploads/2015/02/ReadMe_BankFailures.txt "],
["mlda-difference-in-difference.html", "6 MLDA Difference-in-Difference 6.1 Table 5.2 6.2 Table 5.3 6.3 References", " 6 MLDA Difference-in-Difference Difference-in-difference estimates of the effect of the minimum legal drinking age (MLDA) on mortality (Mouchel, Williams, and Zador 1987; Norberg, Bierut, and Grucza 2009). This replicates the analyses in Tables 5.2 and 5.3 in Mastering ’Metrics. Load necessary libraries. library(&quot;tidyverse&quot;) library(&quot;haven&quot;) library(&quot;rlang&quot;) library(&quot;broom&quot;) library(&quot;clubSandwich&quot;) data(&quot;deaths&quot;, package = &quot;masteringmetrics&quot;) In these regressions, we will use both indicator variables for year as well as a trend, so make a factor version of the year variable. deaths &lt;- mutate(deaths, year_fct = factor(year)) 6.1 Table 5.2 Regression DD Estimates of MLDA-Induced Deaths among 18-20 year-olds, from 1970-1983 dtypes &lt;- c(&quot;all&quot; = &quot;All deaths&quot;, &quot;MVA&quot; = &quot;Motor vehicle accidents&quot;, &quot;suicide&quot; = &quot;Suicide&quot;, &quot;internal&quot; = &quot;All internal causes&quot;) Estimate the DD for MLDA for all causes of death in 18-20 year olds. Run the regression with lm and calculatate the cluster-robust standard errors using sandwich::vcovCL. Subset the data. data &lt;- filter(deaths, year &lt;= 1983, agegr == &quot;18-20 yrs&quot;, dtype == &quot;all&quot;) Run the OLS model. mod &lt;- lm(mrate ~ 0 + legal + state + year_fct, data = data) Calculate cluster robuset coefficients. These are calculcated using a different method than Stata’s default, and thus will be slightly different than those reported in the book. vcov &lt;- vcovCR(mod, cluster = data[[&quot;state&quot;]], type = &quot;CR2&quot;) coef_test(mod, vcov = vcov) %&gt;% rownames_to_column(var = &quot;term&quot;) %&gt;% as_tibble() %&gt;% select(term, estimate = beta, std.error = SE) %&gt;% filter(term == &quot;legal&quot;) %&gt;% knitr::kable(digits = 2) term estimate std.error legal 10.8 4.48 Function to calculate sclustered standard errors and return a tidy data frame of the coefficients and standard errors. cluster_se &lt;- function(mod, cluster, type = &quot;CR2&quot;) { vcov &lt;- vcovCR(mod, cluster = cluster, type = &quot;CR2&quot;) coef_test(mod, vcov = vcov) %&gt;% rownames_to_column(var = &quot;term&quot;) %&gt;% as_tibble() %&gt;% select(term, estimate = beta, std.error = SE) } run_mlda_dd &lt;- function(i) { data &lt;- filter(deaths, year &lt;= 1983, agegr == &quot;18-20 yrs&quot;, dtype == i) # nolint mods &lt;- tribble( ~ name, ~ model, &quot;No trends, no weights&quot;, lm(mrate ~ 0 + legal + state + year_fct, data = data), &quot;Time trends, no weights&quot;, lm(mrate ~ 0 + legal + year_fct + state + state:year, data = data), &quot;No trends, weights&quot;, lm(mrate ~ 0 + legal + year_fct + state, data = data, weights = pop), # &quot;Time trends, weights&quot;, # lm(mrate ~ 0 + legal + year_fct + state + state:year, data = data, weights = pop) ) %&gt;% mutate(coefs = map(model, ~ cluster_se(.x, cluster = data[[&quot;state&quot;]], type = &quot;CR2&quot;))) %&gt;% unnest(coefs) %&gt;% filter(term == &quot;legal&quot;) %&gt;% mutate(response = i) %&gt;% select(name, response, estimate, std.error) } mlda_dd &lt;- map_df(names(dtypes), run_mlda_dd) mlda_dd %&gt;% knitr::kable(digits = 2) name response estimate std.error No trends, no weights all 10.80 4.48 Time trends, no weights all 8.47 4.74 No trends, weights all 12.41 4.78 No trends, no weights MVA 7.59 2.43 Time trends, no weights MVA 6.64 2.47 No trends, weights MVA 7.50 2.30 No trends, no weights suicide 0.59 0.57 Time trends, no weights suicide 0.47 0.74 No trends, weights suicide 1.49 0.92 No trends, no weights internal 1.33 1.53 Time trends, no weights internal 0.08 1.80 No trends, weights internal 1.89 1.83 6.2 Table 5.3 Regression DD Estimates of MLDA-Induced Deaths among 18-20 year-olds, from 1970-1983, controlling for Beer Taxes. This is the analysis presented in Angrist and Pischke (2014) Table 5.3. run_beertax &lt;- function(i) { data &lt;- filter(deaths, year &lt;= 1983, agegr == &quot;18-20 yrs&quot;, dtype == i, !is.na(beertaxa)) out &lt;- tribble( ~ name, ~ model, &quot;No time trends&quot;, lm(mrate ~ 0 + legal + beertaxa + year_fct + state, data = data), &quot;Time trends&quot;, lm(mrate ~ 0 + legal + beertaxa + year_fct + state + state:year, data = data) ) %&gt;% # calc culstered standard errors mutate(coefs = map(model, ~ cluster_se(.x, data[[&quot;state&quot;]]))) %&gt;% unnest(coefs) %&gt;% filter(term %in% c(&quot;legal&quot;, &quot;beertaxa&quot;)) %&gt;% mutate(response = i) %&gt;% select(response, name, term, estimate, std.error) } beertax &lt;- map_df(names(dtypes), run_beertax) beertax %&gt;% knitr::kable(digits = 2) response name term estimate std.error all No time trends legal 10.98 4.60 all No time trends beertaxa 1.51 9.02 all Time trends legal 10.03 4.57 all Time trends beertaxa -5.52 30.40 MVA No time trends legal 7.59 2.51 MVA No time trends beertaxa 3.82 5.27 MVA Time trends legal 6.89 2.47 MVA Time trends beertaxa 26.88 18.76 suicide No time trends legal 0.45 0.58 suicide No time trends beertaxa -3.05 1.61 suicide Time trends legal 0.38 0.72 suicide Time trends beertaxa -12.13 8.28 internal No time trends legal 1.46 1.56 internal No time trends beertaxa -1.36 3.02 internal Time trends legal 0.88 1.68 internal Time trends beertaxa -10.31 10.90 Note: I had trouble getting sandwich::vcovCL to estimate clustered standard errors for this regression. 6.3 References http://masteringmetrics.com/wp-content/uploads/2015/01/analysis.do http://masteringmetrics.com/wp-content/uploads/2015/01/ReadMe_MLDA_DD.txt "],
["references-6.html", "References", " References "]
]
